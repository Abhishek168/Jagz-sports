import mongoose from 'mongoose';

const constant = require('../helpers/constants');

const Users = mongoose.Schema({
  firstName: { type: String, default: '' },
  lastName: { type: String, default: '' },
  userName: { type: String, default: '' },
  email: { type: String, lowercase: true, default: '' },
  password: { type: String, select: false },
  availableGuru: { type: Boolean, default: false },
  dateOfBirth: { type: String, default: '' },
  contactNumber: { type: String, default: '' },
  profilePic: { type: String, default: '' },
  verifyToken: { type: String, default: '' },
  isVerified: { type: Boolean, default: false },
  accountType: { type: String, default: '' },
  roleCode: { type: String, default: '' },
  lastLogin: { type: Date, default: Date.now },
  address: { type: String, default: '' },
  bio: { type: String, default: '' },
  height: { type: String, default: '' },
  businessDocument: { type: String, default: '' },
  country: { type: String, default: '' },
  state: { type: String, default: '' },
  city: { type: String, default: '' },
  zipCode: { type: String, default: '' },
  gender: { type: String, default: '' },
  isAvailabilitySet: { type: Boolean, default: false },
  isMerchantAccount: { type: Boolean, default: false },
  paypalEmail: { type: String, default: '' },
  applePay: { type: Boolean, default: false },
  googlePay: { type: Boolean, default: false },
  paymentMethodNonce: { type: String, default: '' },
  couponCode: { type: String, default: '' },
  fromCoupon: { type: String, default: '' },
  signUpFriends: { type: Number, default: 0 },
  friendBookCredit: { type: Number, default: 0 },
  specialCredit: { type: Number, default: 0 },
  bookingCount: { type: Number, default: 0 },
  isFirstBooking: { type: Boolean, default: true },
  deviceInfo: { type: [{ type: Object }], default: {} },
  currentLoggedInDeviceId: { type: String, default: '' },
  appleUserId: { type: String, default: '' },
  appOpenCount: { type: Number, default: 0 },
  isLodgingFormFilled: { type: Boolean, default: false },
  // business fields
  businessType: { type: String, default: '' },
  businessName: { type: String, default: '' },
  businessEmail: { type: String, default: '' },
  businessContact: { type: String, default: '' },
  webURL: { type: String, default: '' },
  numberOfEMP: { type: String, default: '' },
  taxNumber: { type: String, default: '' },
  aboutBusiness: { type: String, default: '' },
  businessAddress: { type: String, default: '' },
  startDay: { type: String, default: '' },
  endDay: { type: String, default: '' },
  startTime: { type: String, default: '' },
  endTime: { type: String, default: '' },
  deleted: { type: Boolean, default: false },
  defaultPayout: { type: String, default: '' },
  discount: { type: Object, default: {} },
  businessDiscount: { type: String, default: '' },
  serviceOffered: { type: Object, default: {} },
  businessGoogleData: { type: Object, default: {} },
  businessServices: { type: [{ type: Object }], default: [] },
  latitude: { type: Number },
  longitude: { type: Number },
  businessWorkingHours: {
    type: [{ type: Object }], default: [],
  },
  businessPhotos: {
    type: [{ type: Object }], default: [],
  },
  businessCoverPhoto: { type: String, default: '' },
  isMultiLocation: { type: Boolean, default: false },
  isSubUser: { type: Boolean, default: false },
  // Organization fields
  organizationName: { type: String, default: '' },
  organizationEmail: { type: String, default: '' },
  organizationType: { type: String, default: '' },
  organizationAddress: { type: String, default: '' },
  // Tour fields
  tourExperience: { type: String, default: '' },
  tourSkills: { type: String, default: '' },
  tourDocument: { type: String, default: '' },
  tourTripLocation: { type: String, default: '' },
  languages: {
    type: [{ type: Object }], default: [],
  },
  purpose: {
    type: [{ type: Object }], default: [],
  },
  highLights: {
    type: [{ type: Object }], default: [],
  },
  files: {
    type: [], default: [],
  },
  interestedIn: {
    type: [{ type: Object }], default: constant.INTERESTEDIN_DEFAULT,
  },
  availableFor: {
    type: [{ type: Object }], default: constant.AVAILABLE_FOR_DEFAULT,
  },
  price: { type: Number, default: 0 },
  version: { type: Number, default: 0 },
  homeTown: { type: String, default: '' },
  notes: { type: String, default: '' },
  pushNotification: { type: Boolean, default: false },
  isLiveLocation: { type: Boolean, default: false },
  dateCreate: { type: Date, default: Date.now },
  dateUpdate: { type: Date, default: Date.now },
}, {
  versionKey: false,
});

export default mongoose.model('Users', Users, 'Users');
